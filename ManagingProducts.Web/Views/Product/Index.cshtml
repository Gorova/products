
<table id="jqg"></table>
<div id="jpager"></div>
<br/>
<div class="modal fade" tabindex="-1" role="dialog" id="statProductModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="text-info">Statistic of operation</h4>
                
            </div>
            <div class="modal-body">
                <form role="form" id="inform">
                    <label for="productName">Product </label>
                    <div id="productName"></div>
                    <label for="productPrice">Price </label>
                    <div id="productPrice"></div>
                    <label for="totalQ"> Total quantity</label>
                    <div id="totalQ"></div>
                    <label for="totalP">Total price </label>
                    <div id="totalP"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="clear" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="statOperationModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="text-info">Statistic of operations</h4>
            </div>
            <div class="modal-body">
                <table id="statOperation"></table>
            </div>
            <div class="modal-footer">
                <button id="clear2" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="operationForm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="text-info">managing window</h4>
            </div>
            <div class="modal-body">
                <form role="form" id="prod">
                    <label for="product">Product for operation</label>
                    <div id="product"></div>
                    <div hidden id="productId"></div>

                    <div class="form-group">
                        <label for="quantity">Quantity</label>
                        <input id="quantity" name="productQuantity" type="text" value="" class="form-control"/>
                    </div>
                    
                    <div class="form-group">
                        <label for="typeOfOperation">type of Operation</label>
                        <select id="typeOfOperation">
                            <option id="in"></option>
                            <option id="out"></option>
                        </select>
                    </div>
                    <div id="checkQuanty" style="color: red"></div>
                    <div id="checkResult" style="color: red"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="saveOperation" class="btn btn-default" type="submit" data-dismiss="modal">save</button>
                <button class="btn btn-default" type="button" data-dismiss="modal">cancel</button>
            </div>
            </div>
        </div>
    </div>

         
<style>
    
    .ui-jqgrid .ui-pg-input {height: 20px;}
    .ui-jqgrid .ui-jqgrid-pager {height:40px;}
    .ui-jqgrid .ui-jqgrid-pager .ui-pg-div {font-size:14px;}
    table.ui-pg-table.navtable {width: 560px;}
</style>

<script type="text/javascript">
    $(document).ready(function() {
        $.ajaxSetup({ cache: false });

        $("#jqg").jqGrid({
            url: '@Url.Action("Get")',
            datatype: "json",
            colNames: ['Id', 'Name', 'Price'],
            colModel: [
                { name: 'Id', index: 'Id', width: 30, hidden: true, stype: 'text', key: true },
                { name: 'Name', index: 'Name', width: 150, editable: true, editrules: { required: true }, editoptions: { maxlength: 50 }, sortable: true },
                { name: 'Price', index: 'Price', width: 80, sorttype: "number", editable: true, editrules: { required: true, number: true, minValue: 0, maxValue: 10000 }, align: "right", sortable: true }
            ],
            rowNum: 10,
            rowList: [10, 25, 50, 100],
            pager: '#jpager',
            sortName: 'Name',
            viewrecords: true,
            sortOrder: "desc",
            loadonce: false,

            caption: "List of prosucts",
            width: 1000
            
        });

        $("#jqg").jqGrid('navGrid', '#jpager', {
                search: false,
                refresh: false,
                add: true,
                del: true,
                edit: true,
                view: true,
                viewtext: "Details",
                addtext: "Add",
                edittext: "Edit",
                deltext: "Delete"
            },
            update("edit"),
            update("add"),
            update("del")
        );

        function update(act) {
            return {
                closeAfterAdd: true,
                height: 250,
                width: 600,
                closeAfterEdit: true,
                reloadAfterSubmit: true,
                drag: true,
                onclickSubmit: function(params) {
                    var list = $("#jqg");
                    var selectedRow = list.getGridParam("selrow");
                    rowData = list.getRowData(selectedRow);
                    if (act === "add")
                        params.url = '@Url.Action("Create")';

                        else if (act === "del")
                            params.url = '@Url.Action("Delete")';
                        else if (act === "edit")
                            params.url = '@Url.Action("Edit")';

                },
                afterSubmit: function(response, postdata) {
                    $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')
                    return [true, "", 0]
                }
            };
        };

        jQuery("#jqg")
            .navGrid('#jpager', { edit: false, add: false, del: false, search: false })
            .navButtonAdd('#jpager', {
                caption: "prod report",
                onClickButton: function () {
                    debugger;
                    $.ajax({
                        type: "Get",
                        url: "/Product/GetStatisticProduct?id=" + parseInt($('.ui-state-highlight').attr('id')),
                        data: "json",
                        success: function (data) {
                            $('.modal').on('shown.bs.modal', function () {
                                $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                            });
                            $("#statProductModel").modal('show');
                            $("#productName").html(data.Product);
                            $("#productPrice").html(data.Price);
                            $("#totalQ").html(data.TotalQuantity);
                            $("#totalP").html(data.TotalCost);
                        }
                    });
                },
                position: "last"
            });
       //$(function () { $("#clear").on('click', clearModal)});

       // function clearModal() {
           
       //         $('.modal').on("hidden.bs.modal", function (e) {
       //             $(e.target).removeData("bs.modal").find(".modal-content").empty();
       //         });
       // }
        //$(function () { $("#statProductModel").on('shown', createModal) });

        //function createModal() {

        //    $('.modal').on("hidden.bs.modal", function (e) {
        //        $(e.target).create("bs.modal").find(".modal-content").fill();
        //    });
        //}

        jQuery("#jqg")
            .navGrid('#jpager', { edit: false, add: false, del: false, search: false })
            .navButtonAdd('#jpager', {
                caption: "oper report",
                onClickButton: function() {
                    $('.modal').on('shown.bs.modal', function() {
                        $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                    });

                    var id = parseInt($('.ui-state-highlight').attr('id'));
                    $('#statOperationModel').modal('show');

                    $("#statOperation").jqGrid({
                        url: "/Product/GetStatisticOperations?id=" + id,
                        datatype: "json",
                        colNames: ['User', 'CreatingDate', 'Quantity', 'TypeOfOperation'],
                        colModel: [
                            { name: 'User', index: 'User', editable: true, width: 100, edittype: 'text', sortable: true },
                            { name: 'CreatingDate', index: 'CreatingDate', width: 100, formatter:'date', formatoptions:{srcformat:"Y-m-d",newformat:"d-M-Y"}, edittype: 'text', align: "right", sortable: true },
                            { name: 'Quantity', index: 'Quantity', width: 100, edittype: 'text', sortable: true },
                            { name: 'TypeOfOperation', index: 'TypeOfOperation', width: 100, edittype: 'text', align: "right", sortable: true }
                        ],
                        sortName: 'User',
                        viewrecords: true,
                        sortOrder: "desc",
                        caption: "report operations",
                        width: 400,
                        loadonce: false
                    });
                }
            });
       
        jQuery("#jqg")
            .navGrid('#jpager', { edit: false, add: false, del: false, search: false })
            .navButtonAdd('#jpager', {
                caption: "into/out goods",
                onClickButton: function() {
                    $.ajax({
                        type: "Get",
                        url: "/Product/GetSingle?id=" + parseInt($('.ui-state-highlight').attr('id')),
                        data: "json",
                        success: function(data) {
                            $('.modal').on('shown.bs.modal', function() {
                                $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                            });
                            $("#operationForm").modal('show');
                            $("#product").html(data.Name);
                            $("#productId").attr("value", data.Id);
                            $("#quantity").val("");
                        }
                    });
                    $.ajax({
                        type: "Get",
                        url: "/TypeOfOperation/Get",
                        data: "json",
                        success: function (data) {
                            $("#in").html(data[0].Name);
                            $("#out").html(data[1].Name);
                        }
                    });
                }
            });
        $(function () {
            $("#saveOperation").on('click', isAvailable);
        });
       
        function isAvailable() {
            $.ajax({
                type: "Get",
                url: "/Operation/SetQuantity",
                data: {
                    productId: $("#productId").attr("value"),
                    quantity: $("#quantity").val(),
                    typeOfOperation:
                        $("#typeOfOperation option:selected").text()
                },
                success:
                    function (response) {
                        if (response.success) {
                            $.post("/Operation/CreateOperation", {
                                productId: $("#productId").attr("value"),
                                quantity: $("#quantity").val(),
                                typeOfOperation:
                                    $("#typeOfOperation option:selected").text()
                            }, function(response, status) {
                                alert("Data: " + response + "\nStatus: " + status);
                                
                            });
                           
                        } else {
                            $('.modal').on('shown.bs.modal', function () {
                                $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                            });
                            $('.modal').on('shown.bs.modal', '.modal', function () {
                                $(this).create('bs.modal');
                            });

                            $("#operationForm").modal('show');
                            $("#checkQuanty").text("this product has not such quantity");
                        }
                    },
            });
        }
    });
</script>



